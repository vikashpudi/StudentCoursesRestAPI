# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self
pool: selfnamepool
parameters:
- name: prodName
  displayName: Product to Build
  type: string
  default: 'myappp'
- name: registry
  displayName: Registry Hostname
  type: string
  default: 'beatyourlimits.jfrog.io'
- name: targetRepo
  displayName: Target Repo to push to
  type: string
  default: 'mydockerrepo'
variables:
  tag: '$(Build.BuildId)'
  prodName: ${{ parameters.prodName }}
  registry: ${{ parameters.registry }}
  targetRepo: ${{ parameters.targetRepo }}
  buildContext: 'buildcontext-$(prodName)'
  imageNameTb: '$(registry)/$(targetRepo)/buildcontext-$(prodName)'
  imageNameBase: '$(registry)/$(targetRepo)/$(prodName)' 
stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        steps:
          #- task: ArtifactoryToolsInstaller@1
           #  displayName: 'Install Build deps'
            # inputs:
           #    artifactoryService: 'jfrogserviceconnection'
          #     cliInstallationRepo: 'demo' 
          - task: Docker@2
            displayName: 'Build Image'
            inputs:
              containerRegistry: 'dockerregsvcc'
              repository: '$(targetRepo)/$(buildContext)'
              command: 'build'
              Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
              tags: |
                $(Build.BuildNumber)
          - task: ArtifactoryDocker@1
            displayName: 'Push Image'
            inputs:
              command: 'push'
              artifactoryService: 'jfrogserviceconnection'
              targetRepo: 'mydockerrepo'
              imageName: '$(imageNameTb):$(Build.BuildNumber)'
              collectBuildInfo: true
              buildName: '$(Build.DefinitionName)'
              buildNumber: '$(Build.BuildNumber)'
              includeEnvVars: true
          - task: ArtifactoryPublishBuildInfo@1
            displayName: 'Publish Build Info'
            inputs:
              artifactoryService: 'jfrogserviceconnection'
              buildName: '$(Build.DefinitionName)'
              buildNumber: '$(Build.BuildNumber)'
          - task: ArtifactoryXrayScan@1
            displayName: 'Xray Scan'
            inputs:
              artifactoryService: 'jfrogserviceconnection'
              buildName: '$(Build.DefinitionName)'
              buildNumber: '$(Build.BuildNumber)'
              allowFailBuild: true
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    jobs:
    - deployment: Deploy
      displayName: Deploy job
      pool: selfnamepool
      environment: 'myenv.default' #customize with your environment
      strategy:
        runOnce:
          deploy:
            steps:
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                secretName: "imgepullsecret"
                namespace: default
                dockerRegistryEndpoint: dockerregsvcc

            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: deploy
                namespace: default
                manifests: |
                  $(Build.SourcesDirectory)/manifests/mysql.yml
                  $(Build.SourcesDirectory)/manifests/student.yml
                imagePullSecrets: imgepullsecret
                containers: |
                  $(containerRegistry)/$(imageRepository):$(tag)