# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self
pool: 
    vmImage: 'ubuntu-latest'
parameters:
- name: prodName
  displayName: Product to Build
  type: string
  default: 'myappp'
- name: registry
  displayName: Registry Hostname
  type: string
  default: 'testmyconnection.jfrog.io'
- name: targetRepo
  displayName: Target Repo to push to
  type: string
  default: 'mydockerrepo'
variables:
  tag: '$(Build.BuildId)'
  prodName: ${{ parameters.prodName }}
  registry: ${{ parameters.registry }}
  targetRepo: ${{ parameters.targetRepo }}
  buildContext: 'buildcontext-$(prodName)'
  imageNameTb: '$(registry)/$(targetRepo)/buildcontext-$(prodName)'
  imageNameBase: '$(registry)/$(targetRepo)/$(prodName)' 
stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        steps:
          #- task: ArtifactoryToolsInstaller@1
           #  displayName: 'Install Build deps'
            # inputs:
           #    artifactoryService: 'jfrogserviceconnection'
          #     cliInstallationRepo: 'demo' 
          - task: Docker@2
            displayName: 'Build Image'
            inputs:
              containerRegistry: 'acr'
              repository: '$(targetRepo)/$(buildContext)'
              command: 'buildAndPush'
              Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
              tags: '$(Build.BuildNumber)'
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    jobs:
    - deployment: Deploy
      displayName: Deploy job
      pool:
          vmImage: 'ubuntu-latest'
      environment: 'dev' #customize with your environment
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: 'createSecret'
                kubernetesServiceConnection: 'aks'
                namespace: 'default'
                secretType: 'dockerRegistry'
                secretName: 'imgepullsecret'
                dockerRegistryEndpoint: 'acr'

            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'aks'
                namespace: 'default'
                manifests: |
                  $(Build.SourcesDirectory)/manifests/mysql.yaml
                  $(Build.SourcesDirectory)/manifests/student.yaml
                imagePullSecrets: 'imgepullsecret'
                #containers:
                  #$(containerRegistry)/$(imageRepository):$(tag)